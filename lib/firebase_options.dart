// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return webConfig;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // static const FirebaseOptions web = FirebaseOptions(
  //   apiKey: 'AIzaSyAThkAoL7DTcexh0mHIRt1O8sxp6aGZhPk',
  //   appId: '1:77480142893:web:6c0618961af112e6c7f0a4',
  //   messagingSenderId: '77480142893',
  //   projectId: 'andu-dev',
  //   authDomain: 'andu-dev.firebaseapp.com',
  //   storageBucket: 'andu-dev.appspot.com',
  //   measurementId: 'G-B2K7S12HRX',
  // );
    static FirebaseOptions get webConfig {
    const flavorName = String.fromEnvironment("FLAVOR");
    switch (flavorName) {
      case 'dev':
        return devWebConfig;
      case 'prod':
        return prodWebConfig;
      default:
        return devWebConfig;
    }
  }

  static const FirebaseOptions devWebConfig = FirebaseOptions(
    apiKey: 'AIzaSyAThkAoL7DTcexh0mHIRt1O8sxp6aGZhPk',
    appId: '1:77480142893:web:6c0618961af112e6c7f0a4',
    messagingSenderId: '77480142893',
    projectId: 'andu-dev',
    authDomain: 'andu-dev.firebaseapp.com',
    storageBucket: 'andu-dev.appspot.com',
    measurementId: 'G-B2K7S12HRX',
  );

  static const FirebaseOptions prodWebConfig = FirebaseOptions(
    apiKey: 'AIzaSyBi6kSgp4Q_evtlAgkMAFoCdAq8GN2_1Jk',
    appId: '1:77480142893:web:6c0618961af112e6c7f0a4',
    messagingSenderId: '77480142893',
    projectId: "AND'U-prod",
    authDomain: 'and-u-prod.firebaseapp.com',
    storageBucket: 'and-u-prod.appspot.com',
    measurementId: 'G-B2K7S12HRX',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyAU4c8oFDIeLNd8Edci8RDpf8xiBautgpA',
    appId: '1:77480142893:android:604d79eedfdcd9e6c7f0a4',
    messagingSenderId: '77480142893',
    projectId: 'andu-dev',
    storageBucket: 'andu-dev.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyAfpH54d4LZTwjD9JuH4XB17_f5pDyzGVM',
    appId: '1:77480142893:ios:592f5fe2db454acac7f0a4',
    messagingSenderId: '77480142893',
    projectId: 'andu-dev',
    storageBucket: 'andu-dev.appspot.com',
    iosBundleId: 'com.example.ondulisApp',
  );
}
